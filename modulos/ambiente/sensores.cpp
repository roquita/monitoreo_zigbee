#include "sensores.h"

/*
██████╗  ██████╗ ████████╗ ██████╗ ███╗   ██╗    ██████╗ ███████╗    ██╗   ██╗███████╗██╗   ██╗ █████╗ ██████╗ ██╗ ██████╗
██╔══██╗██╔═══██╗╚══██╔══╝██╔═══██╗████╗  ██║    ██╔══██╗██╔════╝    ██║   ██║██╔════╝██║   ██║██╔══██╗██╔══██╗██║██╔═══██╗
██████╔╝██║   ██║   ██║   ██║   ██║██╔██╗ ██║    ██║  ██║█████╗      ██║   ██║███████╗██║   ██║███████║██████╔╝██║██║   ██║
██╔══██╗██║   ██║   ██║   ██║   ██║██║╚██╗██║    ██║  ██║██╔══╝      ██║   ██║╚════██║██║   ██║██╔══██║██╔══██╗██║██║   ██║
██████╔╝╚██████╔╝   ██║   ╚██████╔╝██║ ╚████║    ██████╔╝███████╗    ╚██████╔╝███████║╚██████╔╝██║  ██║██║  ██║██║╚██████╔╝
╚═════╝  ╚═════╝    ╚═╝    ╚═════╝ ╚═╝  ╚═══╝    ╚═════╝ ╚══════╝     ╚═════╝ ╚══════╝ ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝ ╚═════╝

*/

#include <Arduino.h>

#define USER_BUTTON_PIN 2
bool boton_event_flag = false;
void IRAM_ATTR BOTON_ISR()
{
    boton_event_flag = true;
}

void sensor_boton_de_usuario_init()
{
    pinMode(USER_BUTTON_PIN, INPUT);
    attachInterrupt(USER_BUTTON_PIN, BOTON_ISR, RISING);
}
bool sensor_boton_de_usuario_presionado()
{
    return boton_event_flag;
}
void sensor_boton_de_usuario_reset()
{
    boton_event_flag = false;
}

/*
████████╗██╗███████╗███╗   ███╗██████╗  ██████╗
╚══██╔══╝██║██╔════╝████╗ ████║██╔══██╗██╔═══██╗
   ██║   ██║█████╗  ██╔████╔██║██████╔╝██║   ██║
   ██║   ██║██╔══╝  ██║╚██╔╝██║██╔═══╝ ██║   ██║
   ██║   ██║███████╗██║ ╚═╝ ██║██║     ╚██████╔╝
   ╚═╝   ╚═╝╚══════╝╚═╝     ╚═╝╚═╝      ╚═════╝

*/

#define SEGUNDO_MS (1000)
#define MINUTO_MS (SEGUNDO_MS * 60)
#define PERIODO_MS (5 * MINUTO_MS)
int prev;

void periodo_init()
{
    prev = millis();
}
bool periodo_expirado()
{
    bool periodo_cumplido = ((millis() - prev) > PERIODO_MS) ? true : false;
    return periodo_cumplido;
}
void periodo_reset()
{
    prev = millis();
}

/*
████████╗███████╗███╗   ███╗██████╗ ███████╗██████╗  █████╗ ████████╗██╗   ██╗██████╗  █████╗      █████╗ ███╗   ███╗██████╗ ██╗███████╗███╗   ██╗████████╗ █████╗ ██╗
╚══██╔══╝██╔════╝████╗ ████║██╔══██╗██╔════╝██╔══██╗██╔══██╗╚══██╔══╝██║   ██║██╔══██╗██╔══██╗    ██╔══██╗████╗ ████║██╔══██╗██║██╔════╝████╗  ██║╚══██╔══╝██╔══██╗██║
   ██║   █████╗  ██╔████╔██║██████╔╝█████╗  ██████╔╝███████║   ██║   ██║   ██║██████╔╝███████║    ███████║██╔████╔██║██████╔╝██║█████╗  ██╔██╗ ██║   ██║   ███████║██║
   ██║   ██╔══╝  ██║╚██╔╝██║██╔═══╝ ██╔══╝  ██╔══██╗██╔══██║   ██║   ██║   ██║██╔══██╗██╔══██║    ██╔══██║██║╚██╔╝██║██╔══██╗██║██╔══╝  ██║╚██╗██║   ██║   ██╔══██║██║
   ██║   ███████╗██║ ╚═╝ ██║██║     ███████╗██║  ██║██║  ██║   ██║   ╚██████╔╝██║  ██║██║  ██║    ██║  ██║██║ ╚═╝ ██║██████╔╝██║███████╗██║ ╚████║   ██║   ██║  ██║███████╗
   ╚═╝   ╚══════╝╚═╝     ╚═╝╚═╝     ╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝    ╚═╝  ╚═╝╚═╝     ╚═╝╚═════╝ ╚═╝╚══════╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚══════╝

*/
#include <Arduino.h>
#include "DHT.h"
#define DHT11_PIN 1
#define DHTTYPE DHT11
DHT dht(DHT11_PIN, DHTTYPE);

void sensor_temperatura_ambiental_init()
{
    dht.begin();
}
float sensor_temperatura_ambiental_leer()
{
    // delay(2000);

    float temp_celsius = dht.readTemperature();

    if (isnan(temp_celsius))
    {
        Serial.println(F("Failed to read from DHT sensor!"));
        return 0.0;
    }

    return temp_celsius;
}

/*
██╗  ██╗██╗   ██╗███╗   ███╗███████╗██████╗  █████╗ ██████╗     ██████╗ ███████╗     ██████╗ █████╗ ███╗   ███╗ █████╗
██║  ██║██║   ██║████╗ ████║██╔════╝██╔══██╗██╔══██╗██╔══██╗    ██╔══██╗██╔════╝    ██╔════╝██╔══██╗████╗ ████║██╔══██╗
███████║██║   ██║██╔████╔██║█████╗  ██║  ██║███████║██║  ██║    ██║  ██║█████╗      ██║     ███████║██╔████╔██║███████║
██╔══██║██║   ██║██║╚██╔╝██║██╔══╝  ██║  ██║██╔══██║██║  ██║    ██║  ██║██╔══╝      ██║     ██╔══██║██║╚██╔╝██║██╔══██║
██║  ██║╚██████╔╝██║ ╚═╝ ██║███████╗██████╔╝██║  ██║██████╔╝    ██████╔╝███████╗    ╚██████╗██║  ██║██║ ╚═╝ ██║██║  ██║
╚═╝  ╚═╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝╚═════╝ ╚═╝  ╚═╝╚═════╝     ╚═════╝ ╚══════╝     ╚═════╝╚═╝  ╚═╝╚═╝     ╚═╝╚═╝  ╚═╝

*/
#include <Arduino.h>
#define SENSOR_DE_LLUVIA_PIN 5

void sensor_humedad_de_cama_init()
{
    pinMode(SENSOR_DE_LLUVIA_PIN, INPUT);
}
uint16_t sensor_humedad_de_cama_leer()
{
    bool cama_humeda = digitalRead(SENSOR_DE_LLUVIA_PIN) == 0;
    if (cama_humeda)
    {
        return 1;
    }
    else
    {
        return 0;
    }
}